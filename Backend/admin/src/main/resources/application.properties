spring.application.name=admin
server.port=8080

# MySQL datasource configuration
spring.datasource.url=jdbc:mysql://localhost:3306/payfiadmin
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## Hibernate (JPA) specific configuration
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#
#eureka.instance.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#configure config client
spring.config.import=optional:configserver:http://localhost:8084

#spring.profiles.active=prod

##okta configuration
#okta.oauth2.client-id=0oadeeqlff3PnCFcd5d7
#okta.oauth2.issuer=https://dev-98815118.okta.com/oauth2/default


##exposing actuator health endpoints, and always
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always

#configuring fault tolerance with resilience4j circuit breaker module
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.eventConsumerBufferSize=10
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.waitDurationInOpenState=6s
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.merchantTransactionBreaker.slidingWindowType=COUNT_BASED

#configuring fault tolerance with resilience4j retry module
#resilience4j.retry.instances.merchantTransactionRetry.max-attempts=3
#resilience4j.retry.instances.merchantTransactionRetry.wait-duration=2s

#configuriing fault tolerance with resilience4j RateLimiter module
resilience4j.ratelimiter.instances.merchantTransactionRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.merchantTransactionRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.merchantTransactionRateLimiter.timeout-duration=2s

#my.partnerreferencenumber=34788441
#my.partnername=Payfi
#my.escrowAccountNumber=87399435

client.origin.port=http://localhost:3000

logging.level.web=DEBUG
#spring.devtools.add-properties=false
#spring.profiles.active=prod


#API Documentation
#http://localhost:8080/v3/api-docs
#http://localhost:8080/swagger-ui/index.html

server.servlet.context-path=/admins